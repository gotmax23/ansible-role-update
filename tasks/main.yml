---
# tasks file for update
- name: Update package cache
  changed_when: false
  when: ansible_pkg_mgr != "zypper"
  ansible.builtin.package:
    update_cache: true

- name: Update package cache (Zypper only)
  when: ansible_pkg_mgr == "zypper"
  changed_when: false
  check_mode: false
  ansible.builtin.command:
    cmd: "zypper refresh"
    warn: false

- name: Check for updates
  when: mode in ["full", "check"]
  block:
    - name: List upgradeable packages
      changed_when: false
      failed_when: false
      register: upgradeable_packages
      ansible.builtin.command:
        cmd: "{{ update_list_upgradeable_packages_cmd }}"
        warn: false

    - name: Print upgradeable_packages
      changed_when: true
      when: (ansible_pkg_mgr in ["yum", "dnf"] and "Available Upgrades" in upgradeable_packages.stdout_lines) or
            (ansible_pkg_mgr == "apt" and upgradeable_packages.stdout_lines[1] is defined) or
            (ansible_pkg_mgr == "pacman" and upgradeable_packages.stdout_lines[1] is defined) or
            (ansible_pkg_mgr == "zypper" and "No updates found." not in upgradeable_packages.stdout_lines) or
            (ansible_pkg_mgr == "apk" and upgradeable_packages.stdout_lines[1] is defined)
      ansible.builtin.debug:
        msg: "{{ upgradeable_packages['stdout'] }}"

- name: Update packages
  when: mode in ["full", "run"]
  block:
    - name: Update packages (dnf/yum)
      when: ansible_pkg_mgr in [ "yum", "dnf" ]
      ansible.builtin.package:
        name: "*"
        state: latest  # noqa package-latest

    - name: Update packages (apt)
      when: ansible_pkg_mgr == "apt"
      ansible.builtin.apt:
        upgrade: "{{ update_apt_upgrade_type }}"

    - name: Update packages (pacman)
      when: ansible_pkg_mgr == "pacman"
      community.general.pacman:
        upgrade: true

    - name: Update packages (zypper)
      when: ansible_pkg_mgr == "zypper"
      community.general.zypper:
        name: "*"
        state: "{{ update_zypper_state }}"
        allow_vendor_change: "{{ update_zypper_allow_vendor_change }}"

    - name: Autoremove
      when:
        - ansible_pkg_mgr in [ "yum", "dnf", "apt" ]
        - update_autoremove | bool
      ansible.builtin.package:
        autoremove: true
